version: '3.9'

services:
  db:
    image: postgres:latest
    container_name: db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/var/lib/postgresql/data/
    volumes:
      - postgresql_db_data:/var/lib/postgresql/data/
    expose:
      - 5432
    ports:
      - 5433:5432

  db_editor:
    image: adminer
    container_name: db_editor
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
    expose:
      - 8080
    ports:
      - 8081:8080
    depends_on:
      - db

  lakehouse_share_backend_app:
      container_name: lakehouse_share_backend
      restart: always
      build:
        dockerfile: Dockerfile
        context: ./backend/
      # command: >
      #   sh -c "python manage.py wait_for_db &&
      #         python manage.py migrate &&
      #         python manage.py runserver 0.0.0.0:8000"
      environment:
        - env=${env:-PROD}
        - TABLE_FORMAT=${TABLE_FORMAT:-delta}
        - PYICEBERG_CATALOG__DEFAULT__TYPE=glue
        - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
        - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
        - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
        - AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}
        - POSTGRES_USER=${POSTGRES_USERNAME}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_HOST=${POSTGRES_HOST}
        - POSTGRES_PORT=${POSTGRES_PORT}
        - POSTGRES_DB=${POSTGRES_DB}
        - SECRET_KEY=${SECRET_KEY}
        - ALGORITHM=${ALGORITHM}
        - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      volumes:
        - ./backend/:/usr/backend/
      expose:
        - 8000
      ports:
        - 8001:8000
      depends_on:
        - db
  lakehouse_share_frontend_app:
      container_name: lakehouse_share_frontend
      restart: always
      build:
        dockerfile: Dockerfile
        context: ./frontend/
      # command: >
      #   sh -c "python manage.py wait_for_db &&
      #         python manage.py migrate &&
      #         python manage.py runserver 0.0.0.0:8000"
      environment:
        - env=${env:-PROD}
        - BACKEND_HOST=lakehouse_share_backend_app
        - BACKEND_PORT=8000
        - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
        - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      volumes:
        - ./frontend/:/usr/frontend/
      expose:
        - 8501
      ports:
        - 8501:8501
      depends_on:
        - db
        - lakehouse_share_backend_app

volumes:
  postgresql_db_data:
